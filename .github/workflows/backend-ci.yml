name: Backend CI (build + preflight + smoke)
on:
  push:
    branches: [ main ]
    paths:
      - "apps/backend/**"
      - "deploy/prod/Dockerfile.backend"
      - "scripts/**"
      - ".github/workflows/backend-ci.yml"
  pull_request:
    paths:
      - "apps/backend/**"
      - "deploy/prod/Dockerfile.backend"
      - "scripts/**"
jobs:
  build-and-smoke:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image (no cache)
        run: |
          docker build --no-cache \
            -t interface-maths/backend:ci \
            -f deploy/prod/Dockerfile.backend .

      - name: Run container
        run: |
          docker network create infra_nsi_network || true
          docker run -d --name maths_backend_ci \
            --network infra_nsi_network \
            -p 127.0.0.1:18001:8000 \
            -e DATABASE_URL="postgresql+psycopg://u:p@localhost:5432/db" \
            -e CORS_ORIGINS='["http://localhost"]' \
            -e SERVE_STATIC="false" \
            -e CONTENT_ROOT="/site" \
            -e SECRET_KEY="ci-secret" \
            interface-maths/backend:ci
          # attendre que ça réponde
          for i in {1..30}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:18001/api/v1/ping || true)
            if [ "$code" = "200" ]; then echo "app ready"; exit 0; fi
            sleep 1
          done
          echo "backend never became ready"; docker logs maths_backend_ci --tail 200; exit 1

      - name: Smoke tests
        run: |
          curl -fsS http://127.0.0.1:18001/api/v1/ping | jq -e '.ok == true' >/dev/null
          curl -fsS http://127.0.0.1:18001/openapi.json -o /tmp/openapi.json
          jq -e '.openapi and .info and .paths' /tmp/openapi.json >/dev/null
          test "$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:18001/groups/)" = "401"

      - name: Show last logs on failure
        if: failure()
        run: docker logs maths_backend_ci --tail 300 || true

      - name: Cleanup
        if: always()
        run: |
          docker rm -f maths_backend_ci || true
          docker network rm infra_nsi_network || true
